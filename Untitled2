//21			
			else if ((hpos >= 1) & (hpos <= 64) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd20;	
						bgrom_addr <= hpos*(vpos-10'd97);						
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			//bgrom_addr <= bgrom_addr + 1'b1;	
            	end	
//22					
			else if ((hpos >= 65) & (hpos <= 128) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd21;	
						bgrom_addr <= ((hpos-64)*(vpos-10'd97));					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end			
//23					
			else if ((hpos >= 10'd128) & (hpos <= 10'd191) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd22;	
						bgrom_addr <= (hpos-10'd128)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//24					
			else if ((hpos >= 10'd192) & (hpos <= 10'd255) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd23;	
						bgrom_addr <= (hpos-10'd192)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//25					
			else if ((hpos >= 10'd256) & (hpos <= 10'd319) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd24;	
						bgrom_addr <= (hpos-10'd256)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//26					
			else if ((hpos >= 10'd320) & (hpos <= 10'd383) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd25;	
						bgrom_addr <= (hpos-10'd320)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//27					
			else if ((hpos >= 10'd384) & (hpos <= 10'd447) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd26;	
						bgrom_addr <= (hpos-10'd384)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//28					
			else if ((hpos >= 10'd448) & (hpos <= 10'd511) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd27;	
						bgrom_addr <= (hpos-10'd448)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//29					
			else if ((hpos >= 10'd512) & (hpos <= 10'd575) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd28;	
						bgrom_addr <= (hpos-10'd512)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//30					
			else if ((hpos >= 10'd576) & (hpos <= 10'd639) & (vpos >= 10'd97) & (vpos <= 10'd144)) begin
						addrb <= 7'd29;	
						bgrom_addr <= (hpos-10'd576)*(vpos-10'd97);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[11], bgrom3_data[10], bgrom3_data[9], bgrom3_data[8],
													  bgrom3_data[7], bgrom3_data[6], bgrom3_data[5], bgrom3_data[4], 
													  bgrom3_data[3], bgrom3_data[2], bgrom3_data[1], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[11], bgrom4_data[10], bgrom4_data[9], bgrom4_data[8],
													  bgrom4_data[7], bgrom4_data[6], bgrom4_data[5], bgrom4_data[4], 
													  bgrom4_data[3], bgrom4_data[2], bgrom4_data[1], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[11], bgrom6_data[10], bgrom6_data[9], bgrom6_data[8],
													  bgrom6_data[7], bgrom6_data[6], bgrom6_data[5], bgrom6_data[4], 
													  bgrom6_data[3], bgrom6_data[2], bgrom6_data[1], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[11], bgrom7_data[10], bgrom7_data[9], bgrom7_data[8],
													  bgrom7_data[7], bgrom7_data[6], bgrom7_data[5], bgrom7_data[4], 
													  bgrom7_data[3], bgrom7_data[2], bgrom7_data[1], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[11], bgrom8_data[10], bgrom8_data[9], bgrom8_data[8],
													  bgrom8_data[7], bgrom8_data[6], bgrom8_data[5], bgrom8_data[4], 
													  bgrom8_data[3], bgrom8_data[2], bgrom8_data[1], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[11], bgrom9_data[10], bgrom9_data[9], bgrom9_data[8],
													  bgrom9_data[7], bgrom9_data[6], bgrom9_data[5], bgrom9_data[4], 
													  bgrom9_data[3], bgrom9_data[2], bgrom9_data[1], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end