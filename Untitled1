			else	if ((hpos >= 1) & (hpos <= 64) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd0;	
						bgrom_addr <= hpos*vpos-1;						
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			//bgrom_addr <= bgrom_addr + 1'b1;	
            	end	
//2					
			else if ((hpos >= 65) & (hpos <= 128) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd1;	
						bgrom_addr <= ((hpos-64)*vpos - 1);					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end			
//3					
			else if ((hpos >= 10'd128) & (hpos <= 10'd191) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd2;	
						bgrom_addr <= (hpos-10'd128)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//4					
			else if ((hpos >= 10'd192) & (hpos <= 10'd255) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd3;	
						bgrom_addr <= (hpos-10'd192)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//5					
			else if ((hpos >= 10'd256) & (hpos <= 10'd319) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd4;	
						bgrom_addr <= (hpos-10'd256)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//6					
			else if ((hpos >= 10'd320) & (hpos <= 10'd383) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd5;	
						bgrom_addr <= (hpos-10'd320)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//7					
			else if ((hpos >= 10'd384) & (hpos <= 10'd447) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd6;	
						bgrom_addr <= (hpos-10'd384)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//8					
			else if ((hpos >= 10'd448) & (hpos <= 10'd511) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd7;	
						bgrom_addr <= (hpos-10'd448)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//9					
			else if ((hpos >= 10'd512) & (hpos <= 10'd575) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd8;	
						bgrom_addr <= (hpos-10'd512)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end
//10					
			else if ((hpos >= 10'd576) & (hpos <= 10'd639) & (vpos >= 10'd49) & (vpos <= 10'd96)) begin
						addrb <= 7'd9;	
						bgrom_addr <= (hpos-10'd576)*vpos;					
						case(doutb)
							4'd1 : bgcolors <= {bgrom1_data[11], bgrom1_data[10], bgrom1_data[9], bgrom1_data[8],
													  bgrom1_data[7], bgrom1_data[6], bgrom1_data[5], bgrom1_data[4], 
													  bgrom1_data[3], bgrom1_data[2], bgrom1_data[1], bgrom1_data[0]};				
							4'd2 : bgcolors <= {bgrom2_data[11], bgrom2_data[10], bgrom2_data[9], bgrom2_data[8],
													  bgrom2_data[7], bgrom2_data[6], bgrom2_data[5], bgrom2_data[4], 
													  bgrom2_data[3], bgrom2_data[2], bgrom2_data[1], bgrom2_data[0]};			
							4'd3 : bgcolors <= {bgrom3_data[2], bgrom3_data[2], bgrom3_data[2], bgrom3_data[2],
													  bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], bgrom3_data[1], 
													  bgrom3_data[0], bgrom3_data[0], bgrom3_data[0], bgrom3_data[0]};		
							4'd4 : bgcolors <= {bgrom4_data[2], bgrom4_data[2], bgrom4_data[2], bgrom4_data[2],
													  bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], bgrom4_data[1], 
													  bgrom4_data[0], bgrom4_data[0], bgrom4_data[0], bgrom4_data[0]};		
							4'd5 : bgcolors <= {bgrom5_data[11], bgrom5_data[10], bgrom5_data[9], bgrom5_data[8],
													  bgrom5_data[7], bgrom5_data[6], bgrom5_data[5], bgrom5_data[4], 
													  bgrom5_data[3], bgrom5_data[2], bgrom5_data[1], bgrom5_data[0]};	
							4'd6 : bgcolors <= {bgrom6_data[2], bgrom6_data[2], bgrom6_data[2], bgrom6_data[2],
													  bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], bgrom6_data[1], 
													  bgrom6_data[0], bgrom6_data[0], bgrom6_data[0], bgrom6_data[0]};		
							4'd7 : bgcolors <= {bgrom7_data[2], bgrom7_data[2], bgrom7_data[2], bgrom7_data[2],
													  bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], bgrom7_data[1], 
													  bgrom7_data[0], bgrom7_data[0], bgrom7_data[0], bgrom7_data[0]};		
							4'd8 : bgcolors <= {bgrom8_data[2], bgrom8_data[2], bgrom8_data[2], bgrom8_data[2],
													  bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], bgrom8_data[1], 
													  bgrom8_data[0], bgrom8_data[0], bgrom8_data[0], bgrom8_data[0]};		
							4'd9 : bgcolors <= {bgrom9_data[2], bgrom9_data[2], bgrom9_data[2], bgrom9_data[2],
													  bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], bgrom9_data[1], 
													  bgrom9_data[0], bgrom9_data[0], bgrom9_data[0], bgrom9_data[0]};																							
						endcase
	   			bgrom_addr <= bgrom_addr + 1'b1;	
            	end